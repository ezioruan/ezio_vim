Include: helper.vader

Before:
  let g:esearch.cwd = 'spec/fixtures/input_assisting'.g:test_number.next().'/'
  let g:esearch.pattern = '.'
  let g:file = g:esearch.cwd.'file.txt'

Execute (Realign when adding new lines using <CR>):
  call Fixture(g:file, ['a'] + repeat([''], 8) + ['b'] + repeat([''], 989) + ['c'])
  call esearch#init()
  exe "norm /file.txt\<CR>A\<CR>|1"
  exe "norm A\<CR>|2\<ESC>"
  exe "norm /a\<CR>A\<CR>|3"
  exe "norm A\<CR>|4\<ESC>"
  exe "norm /b\<CR>A\<CR>|\<ESC>"
  exe "norm /c\<CR>A\<CR>|5"
  exe "norm A\<CR>|6\<ESC>"

Expect esearch_test:
  Matches in 3 lines, 1 file. Finished.

  file.txt
   ^    1 |1
   ^    1 |2
        1 a
   +    1 |3
   +    1 |4
       10 b
   +   10 |
     1000 c
   + 1000 |5
   + 1000 |6

Execute ("I" starts insert after virtual LineNr column):
  call Fixture(g:file, ['a', 'b', 'c', 'd', 'e'])
  call esearch#init()
  " test correct pos after + sign from dollar pos
  exe "norm /a$\<CR>A\<CR>new1\<ESC>$I|\<ESC>"
  " and from zero pos
  exe "norm A\<CR>new2\<ESC>0I|"

  " test add | at the correct pos when non-blank entry from dollar pos
  exe "norm /b$\<CR>$I|\<ESC>"
  " and from zero pos
  exe "norm /c$\<CR>0I|\<ESC>"

  " test add | at the correct pos when blank entry from dollar pos
  exe "norm /d$\<CR>x$I|\<ESC>"
  " and from zero pos
  exe "norm /e$\<CR>x0I|\<ESC>"

Expect esearch_test(to locate the right position):
  Matches in 5 lines, 1 file. Finished.

  file.txt
     1 a
   + 1 |new1
   + 1 |new2
     2 |b
     3 |c
     4 |
     5 |
